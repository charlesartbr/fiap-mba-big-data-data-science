# -*- coding: utf-8 -*-
"""DecisionTree.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aLnxchEus_iWtgDJbz9otBvXzIeWB_3k
"""

from sklearn.datasets import load_iris
from sklearn import tree
import graphviz

iris = load_iris()

clf = tree.DecisionTreeClassifier()
clf = clf.fit(iris.data, iris.target)

dot_data = tree.export_graphviz(clf, out_file=None, 
                                feature_names=iris.feature_names,  
                                class_names=iris.target_names,  
                                filled=True, rounded=True, special_characters=True)

graph = graphviz.Source(dot_data) 
graph

predicted = clf.predict(iris.data)
predicted

from sklearn.model_selection import train_test_split
# separação da base em 20% de teste 80% de treino
x_train, x_test, y_train, y_test = train_test_split(iris.data, iris.target, test_size=0.2, random_state=4)

clf = tree.DecisionTreeClassifier()
clf = clf.fit(x_train, y_train)

dot_data = tree.export_graphviz(clf, out_file=None, 
                                feature_names=iris.feature_names,  
                                class_names=iris.target_names,  
                                filled=True, rounded=True, special_characters=True)

graph = graphviz.Source(dot_data) 
graph

predicted = clf.predict(x_test)
print(predicted)
print(y_test)

acertos = len([1 for i in range(len(predicted)) if predicted[i] == y_test[i]])

print("Acertos %.2f%%" % (acertos / len(predicted) * 100))

()